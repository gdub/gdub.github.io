<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Gary Wilson Jr. - templates</title><link href="https://gdub.github.io/thegarywilson.com/" rel="alternate"></link><link href="https://gdub.github.io/thegarywilson.com/blog/feed/templates.atom.xml" rel="self"></link><id>https://gdub.github.io/thegarywilson.com/</id><updated>2006-09-23T12:45:00-05:00</updated><entry><title>is_authenticated() vs. is_anonymous()</title><link href="https://gdub.github.io/thegarywilson.com/blog/2006/is_authenticated-vs-is_anonymous/" rel="alternate"></link><published>2006-09-23T12:45:00-05:00</published><updated>2006-09-23T12:45:00-05:00</updated><author><name>Gary Wilson Jr.</name></author><id>tag:gdub.github.io,2006-09-23:/thegarywilson.com/blog/2006/is_authenticated-vs-is_anonymous/</id><summary type="html">&lt;p&gt;A warning for those who might not of noticed the change.  About a month ago (in &lt;a class="reference external" href="http://code.djangoproject.com/changeset/3360"&gt;[3360]&lt;/a&gt;), an &lt;tt class="docutils literal"&gt;is_authenticated&lt;/tt&gt; method was added to the User and AnonymousUser classes.  These are the classes used for Django's default authentication system.&lt;/p&gt;
&lt;p&gt;Previously, the template code used for displaying content based on whether or â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;A warning for those who might not of noticed the change.  About a month ago (in &lt;a class="reference external" href="http://code.djangoproject.com/changeset/3360"&gt;[3360]&lt;/a&gt;), an &lt;tt class="docutils literal"&gt;is_authenticated&lt;/tt&gt; method was added to the User and AnonymousUser classes.  These are the classes used for Django's default authentication system.&lt;/p&gt;
&lt;p&gt;Previously, the template code used for displaying content based on whether or not a user had authenticated went something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="nv"&gt;user.is_anonymous&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;Content for logged in users.&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;Content for non-logged in users.&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The problem with this code is that if, somehow, the &lt;tt class="docutils literal"&gt;user&lt;/tt&gt; template variable did not get populated, your template would treat the requesting user as if they were logged in.&lt;/p&gt;
&lt;p&gt;Notice that this sort of behavior will be seen for &lt;strong&gt;all&lt;/strong&gt; negative if statements.  The template code &lt;tt class="docutils literal"&gt;{% if not variable %}&lt;/tt&gt; will always evaluate to &lt;tt class="docutils literal"&gt;True&lt;/tt&gt; if &lt;tt class="docutils literal"&gt;variable&lt;/tt&gt; doesn't exist in the context.  This is because Django uses the &lt;a class="reference external" href="http://www.djangoproject.com/documentation/settings/#template-string-if-invalid"&gt;settings.TEMPLATE_STRING_IF_INVALID&lt;/a&gt; value for non-existent template variables; by default, &lt;tt class="docutils literal"&gt;TEMPLATE_STRING_IF_INVALID&lt;/tt&gt; is &lt;tt class="docutils literal"&gt;''&lt;/tt&gt;, which evaluates to &lt;tt class="docutils literal"&gt;False&lt;/tt&gt; (and &lt;tt class="docutils literal"&gt;not False&lt;/tt&gt; is &lt;tt class="docutils literal"&gt;True&lt;/tt&gt;).&lt;/p&gt;
&lt;p&gt;Notice also that even using the template code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;user.is_anonymous&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;Content for non-logged in users.&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;Content for logged in users.&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(without the &lt;tt class="docutils literal"&gt;not&lt;/tt&gt;) will not work in this case because if the &lt;tt class="docutils literal"&gt;user&lt;/tt&gt; variable is non-existent, the requesting user will still be treated as if they were authenticated.&lt;/p&gt;
&lt;p&gt;The new, recommended way for checking that a requesting user has been authenticated in your templates is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;user.is_authenticated&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;Content for logged in users.&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;Content for non-logged in users&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here, if the &lt;tt class="docutils literal"&gt;user&lt;/tt&gt; template variable were to not exist, your template would treat the requesting user as non-authenticated, just as we would want.&lt;/p&gt;
</content><category term="writing"></category><category term="authentication"></category><category term="django"></category><category term="templates"></category></entry></feed>