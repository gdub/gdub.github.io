<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Gary Wilson Jr. - bzr</title><link href="https://gdub.github.io/" rel="alternate"></link><link href="https://gdub.github.io/blog/feed/bzr.atom" rel="self"></link><id>https://gdub.github.io/</id><updated>2007-12-01T00:40:00-06:00</updated><entry><title>Installing the latest version of Bazaar and tools on Gentoo</title><link href="https://gdub.github.io/blog/2007/installing-the-latest-version-of-bazaar-and-tools-on-gentoo/" rel="alternate"></link><published>2007-12-01T00:40:00-06:00</published><updated>2007-12-01T00:40:00-06:00</updated><author><name>Gary Wilson Jr.</name></author><id>tag:gdub.github.io,2007-12-01:/blog/2007/installing-the-latest-version-of-bazaar-and-tools-on-gentoo/</id><summary type="html">&lt;p&gt;Currently, the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;bzr-svn&lt;/span&gt;&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;bzr-gtk&lt;/span&gt;&lt;/tt&gt; plugins are not available in Gentoo's package directory.  Fortunately, there is exists a &lt;a class="reference external" href="https://launchpad.net/bzr-gentoo-overlay/"&gt;bzr Gentoo overlay&lt;/a&gt;. If you've never used an &lt;a class="reference external" href="http://www.gentoo.org/proj/en/overlays/userguide.xml"&gt;overlay&lt;/a&gt; before, it's a way to override or add packages to Gentoo's standard package directory.  In this overlay there are a couple common plugins …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Currently, the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;bzr-svn&lt;/span&gt;&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;bzr-gtk&lt;/span&gt;&lt;/tt&gt; plugins are not available in Gentoo's package directory.  Fortunately, there is exists a &lt;a class="reference external" href="https://launchpad.net/bzr-gentoo-overlay/"&gt;bzr Gentoo overlay&lt;/a&gt;. If you've never used an &lt;a class="reference external" href="http://www.gentoo.org/proj/en/overlays/userguide.xml"&gt;overlay&lt;/a&gt; before, it's a way to override or add packages to Gentoo's standard package directory.  In this overlay there are a couple common plugins, as well as a patched version of Subversion that is needed for the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;bzr-svn&lt;/span&gt;&lt;/tt&gt; plugin.&lt;/p&gt;
&lt;p&gt;Current packages in the overlay:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;bzr&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;bzrtools&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;bzr-config&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;bzr-dbus&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;bzr-gtk&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;bzr-rebase&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;bzr-svn&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;bzr-vimdiff&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;paramiko&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;subversion&lt;/tt&gt; (patched version needed for bzr-svn)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Steps for using the overlay:&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;As usual, update your portage tree:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
emerge --sync
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Make sure you have the following line in your &lt;tt class="docutils literal"&gt;/etc/make.conf&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
source /usr/portage/local/layman/make.conf
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Get a copy of the overlay from launchpad:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
bzr branch lp:///bzr-gentoo-overlay
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Make sure you have the path to the overlay set in &lt;tt class="docutils literal"&gt;/usr/portage/local/layman/make.conf&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
PORTDIR_OVERLAY=&amp;quot;/path/to/bzr-gentoo-overlay&amp;quot;
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Now you should be able to update your system, pulling in updates to any currently installed packages from the new overlay:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
emerge -uav world
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;emerge any of the new packages you want that are now available from the overlay.  Note: If you install &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;bzr-svn&lt;/span&gt;&lt;/tt&gt;, make sure to re-install Subversion so that the patched version is used from the overlay:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
emerge -av bzr-gtk bzr-svn subversion
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content><category term="writing"></category><category term="bzr"></category><category term="gentoo"></category></entry><entry><title>Hacking Django, how Bazaar</title><link href="https://gdub.github.io/blog/2007/hacking-django-how-bazaar/" rel="alternate"></link><published>2007-01-11T01:08:00-06:00</published><updated>2007-01-11T01:08:00-06:00</updated><author><name>Gary Wilson Jr.</name></author><id>tag:gdub.github.io,2007-01-11:/blog/2007/hacking-django-how-bazaar/</id><summary type="html">&lt;p&gt;A short while ago, I went on a mission to find a better way to hack &lt;a class="reference external" href="http://www.djangoproject.com/"&gt;Django&lt;/a&gt;.  I needed a way to keep my patches organized and updated.  So, in this article I discuss my experiences with a tool I found to help me achieve these goals...&lt;/p&gt;
&lt;p&gt;Enter &lt;a class="reference external" href="http://bazaar-vcs.org/"&gt;Bazaar&lt;/a&gt;, one …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A short while ago, I went on a mission to find a better way to hack &lt;a class="reference external" href="http://www.djangoproject.com/"&gt;Django&lt;/a&gt;.  I needed a way to keep my patches organized and updated.  So, in this article I discuss my experiences with a tool I found to help me achieve these goals...&lt;/p&gt;
&lt;p&gt;Enter &lt;a class="reference external" href="http://bazaar-vcs.org/"&gt;Bazaar&lt;/a&gt;, one of the several &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Version_control_system#Distributed_version_control"&gt;distributed version control systems&lt;/a&gt; that have been getting some hype recently.  With &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Comparison_of_revision_control_software"&gt;so many to choose from&lt;/a&gt;, why did I choose Bazaar?  Well, maybe it was because of the cool name, or maybe it was the pretty website, or maybe just because it's written in the language I love—&lt;a class="reference external" href="http://www.python.org/"&gt;Python&lt;/a&gt;.  If you are familiar with &lt;a class="reference external" href="http://subversion.tigris.org/"&gt;Subversion&lt;/a&gt;, then you will feel right at home with Bazaar.  This is because Bazaar uses most of the same commands as Subversion (e.g. &lt;tt class="docutils literal"&gt;svn ci = bzr ci&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;svn st = bzr st&lt;/tt&gt;, etc.).&lt;/p&gt;
&lt;p&gt;Following &lt;a class="reference external" href="http://jameswestby.net/tips/tips/hacking-a-project-with-bzr.html"&gt;this guide for hacking an open source project using bzr&lt;/a&gt;, I created a &lt;tt class="docutils literal"&gt;django&lt;/tt&gt; directory to stash my django hacks.  After using svn to check out the latest Django code to a directory named &lt;tt class="docutils literal"&gt;upstream&lt;/tt&gt;, and turning &lt;tt class="docutils literal"&gt;upstream&lt;/tt&gt; into a bzr repository too, it was time to start the real work.  To re-iterate in command line speak, here is what I did:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; The steps below have been updated to reflect changes with bzr commands (versions &amp;gt;=0.15rc2).&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mkdir django
cd django
bzr init-repo .            # use &amp;quot;bzr init-repo --trees .&amp;quot; here instead if using a version &amp;lt;0.15rc2
svn co http://code.djangoproject.com/svn/django/trunk/ upstream
cd upstream
bzr init
echo &amp;quot;.svn&amp;quot; &amp;gt; .bzrignore   # do not store svn metadata in our bzr repo
bzr add
bzr ci -m 'Initial import of Django.'
&lt;/pre&gt;
&lt;p&gt;Usually, when you want to add a new feature to some code, you create a branch.  The purpose of these, so called, feature branches is to keep the features separated.  Trying to create multiple features in the same branch would just be a big mess.  Creating branches in a Subversion repository is easy enough, you just &lt;tt class="docutils literal"&gt;svn cp&lt;/tt&gt; the code to a new location.  It's the keeping your branch in sync with the trunk that's not as easy.&lt;/p&gt;
&lt;p&gt;With Subversion, you have to keep track of the revisions that have already been merged to your branch and make sure to only merge the changes that haven't already been merged.  Not so with Bazaar; Bazaar keeps track of this for you.  A simple &lt;tt class="docutils literal"&gt;bzr merge&lt;/tt&gt; will pull in upstream changes that have not been merged yet.&lt;/p&gt;
&lt;p&gt;So, when I wanted to start working on a patch for &lt;a class="reference external" href="http://code.djangoproject.com/ticket/2473"&gt;ticket #2473&lt;/a&gt;, I created a branch:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
bzr branch upstream in-and-empty-list-2473
&lt;/pre&gt;
&lt;p&gt;After &lt;tt class="docutils literal"&gt;cd&lt;/tt&gt;'ing into my new branch and committing my changes, I created a diff to attach to the ticket with the command:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
bzr diff -r branch:../upstream
&lt;/pre&gt;
&lt;p&gt;So far, working with Bazaar has been a breeze.  Without it, &lt;a class="reference external" href="http://code.djangoproject.com/ticket/2473"&gt;my&lt;/a&gt; &lt;a class="reference external" href="http://code.djangoproject.com/ticket/2756"&gt;Django&lt;/a&gt; &lt;a class="reference external" href="http://code.djangoproject.com/ticket/3180"&gt;holiday&lt;/a&gt; &lt;a class="reference external" href="http://code.djangoproject.com/ticket/3182"&gt;hacking&lt;/a&gt; wouldn't have been nearly as fun.&lt;/p&gt;
</content><category term="writing"></category><category term="bzr"></category><category term="django"></category><category term="dvcs"></category></entry></feed>